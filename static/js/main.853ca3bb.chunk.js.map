{"version":3,"sources":["Components/Financials.jsx","Components/DebitHover.jsx","Components/CreditHover.jsx","App.js","reportWebVitals.js","index.js"],"names":["Financials","props","state","userdata","debit","credit","getUserData","bind","getDebitData","getCreditData","this","getUserDetails","getDebitVal","getCreditVal","setState","fetch","response","json","className","noOfDebitAccounts","noOfCreditAccounts","totalAvailableDebitBalance","totalAvailableCreditBalance","id","style","fontSize","fontWeight","marginLeft","banks","map","bank","index","data-tip","data-for","bankId","data-effect","data-background-color","src","cardimage","alt","height","bankName","accounts","interestRate","accountType","balance","bankdetails","apr","color","eval","dueDate","Date","setDate","getDate","totalBalanceDue","showThumbs","autoPlay","infiniteLoop","useKeyboardArrows","width","display","justifyContent","Component","DebitHover","standingInst","minBalance","class","CreditHover","minbalance","showdue","minBalanceDue","MinBalanceExist","ShowMinDue","MinBalanceNotExist","ShowPrincipalDue","toDateString","creditLimit","availableCredit","remainingFullTerm","App","name","value","href","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.853ca3bb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport DebitHover from \"./DebitHover\";\r\nimport CreditHover from \"./CreditHover\";\r\nimport { GoArrowRight } from \"react-icons/go\";\r\nimport { GoGraph } from \"react-icons/go\";\r\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\nclass Financials extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state =\r\n    {\r\n      userdata: [],\r\n      debit: [],\r\n      credit: []\r\n    };\r\n    this.getUserData = this.getUserData.bind(this);\r\n    this.getDebitData = this.getDebitData.bind(this);\r\n    this.getCreditData = this.getCreditData.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    var getUserDetails = await this.getUserData();\r\n    var getDebitVal = await this.getDebitData();\r\n    var getCreditVal = await this.getCreditData();\r\n    this.setState({ userdata: getUserDetails, debit: getDebitVal, credit: getCreditVal });\r\n  }\r\n\r\n  async getUserData() {\r\n    const response = await fetch('http://localhost:8000/userdata');\r\n    const json = await response.json();\r\n    return json;\r\n  }\r\n\r\n  async getDebitData() {\r\n    const response = await fetch('http://localhost:8000/debit');\r\n    const json = await response.json();\r\n    return json;\r\n  }\r\n  async getCreditData() {\r\n    const response = await fetch('http://localhost:8000/credit');\r\n    const json = await response.json();\r\n    return json;\r\n  }\r\n\r\n  render() {\r\n    if (this.state.userdata[0] && this.state.debit[0] && this.state.credit[0]) {\r\n      const userdata = this.state.userdata[0];\r\n      return (\r\n        <div>\r\n          <div className=\"main\">\r\n            <div className=\"main-left\">\r\n              <div>\r\n                <h2>&nbsp;&nbsp;&nbsp;My Financials</h2>\r\n              </div>\r\n              <div className=\"main-left-top\">\r\n                <div className=\"mltone\">\r\n                  <span>Debit accounts</span>\r\n                  <br />\r\n                  <span className=\"tdi-digits\">{userdata.noOfDebitAccounts}</span>\r\n                  <br />\r\n                  <span>Credit accounts</span>\r\n                  <br />\r\n                  <span className=\"tdi-digits\">{userdata.noOfCreditAccounts} </span>\r\n                  <br />\r\n                </div>\r\n                <div className=\"vertical\"></div>\r\n                <div className=\"mlttwo\">\r\n                  <span>Debit balance</span>\r\n                  <br />\r\n                  <span className=\"tdi-digits\">\r\n                    &#8356; {userdata.totalAvailableDebitBalance}\r\n                  </span>\r\n                  <br />\r\n                  <span>Credit Outstanding</span>\r\n                  <br />\r\n                  <span className=\"tdi-digits\">\r\n                    &#8356; {userdata.totalAvailableCreditBalance}\r\n                  </span>\r\n                  <br />\r\n                </div>\r\n                <div className=\"vertical\"></div>\r\n\r\n                <div className=\"mltthree\">\r\n                  <p id=\"mltthree-text\">\r\n                    Looking for best option to maximize your savings and optimise\r\n                    your expenses\r\n                </p>\r\n                  <button className=\"btn btn-success btn-xs\">\r\n                    {\" \"}\r\n                  &nbsp;&nbsp;Yes&nbsp;\r\n                  <GoArrowRight className=\"yesarrow\" />\r\n                  &nbsp;\r\n                </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"main-left-bottom\">\r\n                <div className=\"main-left-bottom-left\">\r\n                  <div className=\"inner-head\">\r\n                    <div\r\n                      style={{\r\n                        fontSize: \"Larger\",\r\n                        fontWeight: \"bold\",\r\n                        marginLeft: 0,\r\n                      }}\r\n                    >\r\n                      <span>Debit Accounts</span>\r\n                    </div>\r\n                    <div>\r\n                      <button className=\"btn  \">\r\n                        <GoGraph />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {\r\n                    this.state.debit[0].banks.map((bank, index) => {\r\n                      return (<div\r\n                        className=\"inner\"\r\n                        data-tip=\"tooltip\"\r\n                        data-for={\"debit_\" + bank.bankId}\r\n                        data-effect=\"solid\"\r\n                        data-background-color=\"white\"\r\n                      >\r\n                        <div className=\"inner-one\">\r\n                          <div className=\"cardimage\">\r\n\r\n                            <img src={`./assets/${bank.cardimage}`} alt=\"Halifax@2x\"\r\n                              height=\"50px\"></img>\r\n                          </div>\r\n                          <div>\r\n                            {bank.bankName}\r\n                            <br />\r\n                            <span className=\"intRate\">\r\n                              {bank.accounts[0].interestRate}\r\n                      &#37;&nbsp;AER\r\n                    </span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"inner-two\">\r\n                          {bank.accounts[0].accountType}\r\n                  &nbsp;|&nbsp;&#8356;{bank.accounts[0].balance}\r\n                        </div>\r\n                        <ReactTooltip id={\"debit_\" + bank.bankId}>\r\n                          <DebitHover id={bank.bankId} bankdetails={bank} />\r\n                        </ReactTooltip>\r\n                      </div>\r\n                      )\r\n                    }\r\n                    )\r\n                  }\r\n                  <div className=\"inner just-for-flex-purpose\"></div>\r\n                </div>\r\n\r\n                <div className=\"main-left-bottom-right\">\r\n                  <div className=\"inner-head\">\r\n                    <div\r\n                      style={{\r\n                        fontSize: \"Larger\",\r\n                        fontWeight: \"bold\",\r\n                        marginLeft: 0,\r\n                      }}\r\n                    >\r\n                      <span>Credit Accounts</span>\r\n                    </div>\r\n                    <div>\r\n                      <button className=\"btn  \">\r\n                        <GoGraph />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {\r\n                    this.state.credit[0].banks.map((bank, index) => {\r\n                      return (\r\n                        <div className=\"inner\" data-tip=\"tooltip\"\r\n                          data-for={\"credit_\" + bank.bankId}\r\n                          data-effect=\"solid\"\r\n                          data-background-color=\"white\">\r\n                          <div className=\"inner-one\">\r\n                            <div className=\"cardimage\">\r\n                              <img src={`./assets/${bank.cardimage}`} alt={bank.bankName}\r\n                                height=\"50px\"></img>\r\n                            </div>\r\n                            <div>\r\n                              {bank.bankName}\r\n                              <br />\r\n                              <span className=\"intRate\">\r\n                                {bank.accounts[0].apr || bank.accounts[0].interestRate}\r\n                        &#37;&nbsp;APR\r\n                      </span>\r\n                              <br />\r\n                              <span style={{ color: \"rgb(255,93,100)\" }}>\r\n                                <BsFillInfoCircleFill />\r\n                              </span>\r\n                              <span>\r\n                                {(eval(bank.accounts[0].dueDate) -\r\n                                  new Date().setDate(new Date().getDate())) /\r\n                                  86400000}\r\n                        Days\r\n                      </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"inner-two\">\r\n                            {bank.accounts[0].accountType}\r\n                    &nbsp;|&nbsp;&#8356;\r\n                    {bank.accounts[0].totalBalanceDue}\r\n                          </div>\r\n                          <ReactTooltip id={\"credit_\" + bank.bankId}>\r\n                            <CreditHover id={bank.bankId} bankdetails={bank} />\r\n                          </ReactTooltip>\r\n                        </div>\r\n                      )\r\n                    }\r\n                    )\r\n                  }\r\n                  <div className=\"inner-opt-button\">\r\n                    <div>\r\n                      <button className=\"btn btn-success btn-lg\">\r\n                        Optimize&nbsp;\r\n                      <GoArrowRight className=\"optimizearrow\" />{\" \"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"main-right\">\r\n               <Carousel showThumbs={false} autoPlay={true} infiniteLoop={true} useKeyboardArrows={true}>\r\n                <div>\r\n                    <img src=\"./assets/imgone.png\" alt=\"\" className=\"image\" />\r\n                </div>\r\n                <div>\r\n                    <img src=\"./assets/imgone.png\" alt=\"\" className=\"image\" />\r\n                </div>\r\n                <div>\r\n                    <img src=\"./assets/imgone.png\" alt=\"\" className=\"image\" />\r\n                </div>\r\n            </Carousel> \r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"livechat\">\r\n            <img src=\"./assets/livechat.png\" alt=\"\" height=\"60px\" width=\"60px\" />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (<h1  >\r\n\r\n        <span className=\" text-muted\" style={{\r\n          fontSize: \"80px\",\r\n          color: \"black\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}>Loading..</span>\r\n      </h1>)\r\n    }\r\n\r\n  }\r\n}\r\nexport default Financials;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DebitHover extends Component {\r\n\r\n  render() {\r\n    if (this.props.bankdetails) {\r\n      const bank = this.props.bankdetails;\r\n      return (\r\n\r\n        <div className=\"hover-card-main\">\r\n          <div>\r\n            <img src={`./assets/${bank.cardimage}`} alt={bank.bankName} height=\"110px\" />\r\n          </div>\r\n          <div className=\"hover-text-left\">\r\n            <div>\r\n              <div className=\"head\">Banks</div>\r\n              <div>{bank.bankName}</div>\r\n            </div>\r\n            <div>\r\n              <div className=\"head\">Standing Instructions</div>\r\n              <div> &#8356;{bank.accounts[0].standingInst}</div>\r\n            </div>\r\n            <div>\r\n              <div className=\"head\">Min Balance</div>\r\n              <div> &#8356;{bank.accounts[0].minBalance}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"hover-text-right\">\r\n            <div className=\"head\">Available Balance</div>\r\n            <div>&#8356;{bank.accounts[0].balance}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (<h1  >\r\n        <div class=\"spinner-grow text-muted\"></div>\r\n        <span style={{\r\n          fontSize: \"20px\",\r\n          color: \"black\"\r\n        }}>Loading..</span>\r\n\r\n      </h1>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default DebitHover;\r\n","import React, { Component } from 'react';\r\nclass CreditHover extends Component {\r\n  state = {}\r\n  render() {\r\n    let minbalance, showdue;\r\n    if (this.props.bankdetails.accounts[0].minBalanceDue) {\r\n      minbalance = <MinBalanceExist bank={this.props.bankdetails.accounts[0]}></MinBalanceExist>\r\n      showdue = <ShowMinDue bank={this.props.bankdetails.accounts[0]}></ShowMinDue>\r\n    } else {\r\n      minbalance = <MinBalanceNotExist bank={this.props.bankdetails.accounts[0]}></MinBalanceNotExist>\r\n      showdue = <ShowPrincipalDue bank={this.props.bankdetails.accounts[0]}></ShowPrincipalDue>\r\n    }\r\n    if (this.props.bankdetails) {\r\n      const bank = this.props.bankdetails;\r\n      return (<div className=\"hover-card-main\">\r\n        <div>\r\n          <img src={`./assets/${bank.cardimage}`} alt={bank.bankName} height=\"110px\" />\r\n        </div>\r\n        <div className=\"hover-text-left \">\r\n          <div>\r\n            <div className=\"head\">Banks</div>\r\n            <div>{bank.bankName}</div>\r\n          </div>\r\n          {minbalance}\r\n        </div>\r\n        <div className=\"hover-text-right\">\r\n          {showdue}\r\n          <div>\r\n            <div className=\"head\">Due Date</div>\r\n            {new Date(\r\n              eval(bank.accounts[0].dueDate)\r\n            ).toDateString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction MinBalanceExist(props) {\r\n  return (<div>\r\n    <div>\r\n      <div className=\"head\">Credit limit</div>\r\n      <div> &#8356;{props.bank.creditLimit}</div>\r\n    </div>\r\n    <div>\r\n      <div className=\"head\">Available Credit</div>\r\n      <div> &#8356;{props.bank.availableCredit}</div>\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nfunction MinBalanceNotExist(props) {\r\n  return (<div>\r\n    <div className=\"head\">Remaining Full Term</div>\r\n    <div>\r\n      &#8356;{props.bank.remainingFullTerm}\r\n    </div>\r\n  </div>)\r\n}\r\nfunction ShowMinDue(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"head\">Minimum due balance </div>\r\n      <div>&#8356;{props.bank.minBalanceDue}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ShowPrincipalDue(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"head\">Principal Due</div>\r\n      <div>&#8356;{props.bank.totalBalanceDue}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default CreditHover;","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { AiOutlineHome } from \"react-icons/ai\";\nimport { BiWalletAlt } from \"react-icons/bi\";\nimport { RiMoneyDollarCircleLine } from \"react-icons/ri\";\nimport { GoGraph } from \"react-icons/go\";\nimport { GiPiggyBank } from \"react-icons/gi\";\nimport { CgMail } from \"react-icons/cg\";\nimport Financials from \"./Components/Financials.jsx\";\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"Header\">\n        <div className=\"header-left\">\n          <span id=\"main-head\">optima</span>\n          <span id=\"sub\">Pay Less,Save More</span>\n          <span id=\"bell\">\n            <img src=\"./assets/bell.png\" alt=\"\" height=\"30px\" />\n          </span>\n        </div>\n        <div className=\"header-right\">\n          <img src=\"./assets/contact.jpeg\" alt=\"\" height=\"30px\" />\n          <select name=\"users\" id=\"users\">\n          <option value=\"alice\">Alice</option>  \n            <option value=\"bob\">Bob</option>  \n          </select>\n          \n        <div className=\"btn\">\n        <img src=\"./assets/logout.png\" alt=\"\" height=\"29px\" /> \n        </div>\n\n        </div>\n      </div>\n      <div>\n        <div className=\"menu\">\n          <a href=\"/home\" className=\"active\">\n            <AiOutlineHome />\n          </a>\n          <a href=\"/\">\n            <BiWalletAlt />\n          </a>\n          <a href=\"/\">\n            <RiMoneyDollarCircleLine />\n          </a>\n          <a href=\"/\">\n            <GoGraph />\n          </a>\n          <a href=\"/\">\n            <GiPiggyBank />\n          </a>\n          <a href=\"/\">\n            <CgMail />\n          </a>\n        </div>\n      </div>\n      <div>\n        <div>\n          <Router>\n            <Route path=\"/home\"  component={Financials} />\n          </Router>\n          {/*For Remaining Nav Buttons\n           <Router>\n            <Route path=\"/\"  component={} />\n          </Router>\n          <Router>\n            <Route path=\"/\"  component={} />\n          </Router>\n          <Router>\n            <Route path=\"/\"  component={} />\n          </Router> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}